{"version":3,"sources":["fn/fn.js","component/menu/tableColumn/orderColumn.js","assets/red-onion.jpg","context/headerContext.js","component/menuItem/MenuItem.js","component/product/modal/AddProduct.js","component/salelist/tableColumn/salelistColumn.js","component/salelist/SaleList.js","component/order/tableColumn/orderlistColumn.js","component/order/modal/EditOrder.js","component/order/OrderList.js","component/print/printInvoice.js","component/menu/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["currencyFormat","num","toFixed","replace","Button","Group","orderColumn","handleRemoveOrder","handleEditQty","handlePlusQty","handleMinusQty","title","dataIndex","key","width","render","text","record","i","size","type","min","onChange","e","newValue","target","value","qty","price","fixed","align","onConfirm","_id","okText","cancelText","style","cursor","className","color","DeleteOutlined","rielAsOne","MenuItem","item","handleClick","xs","md","padding","height","onClick","position","TagOutlined","fontSize","textAlign","name","toUpperCase","Option","Select","AddProduct","open","setOpen","setSuccess","axios","require","Form","useForm","form","addProduct","a","post","resetFields","message","error","visible","onOk","onCancel","footer","onFinish","values","onFinishFailed","errorInfo","console","log","span","Item","rules","required","placeholder","offset","htmlType","SaleList","useState","saleList","setSaleList","getSaleList","get","data","useEffect","columns","totalSaleAmount","dataSource","pagination","orderlistColumn","handleEdit","handleDeliver","handlePrintInvoice","moment","createdAt","format","orderItems","length","totalPrice","badge","isDelivered","isPaid","CarFilled","EditFilled","PrinterFilled","EditOrder","editOrder","put","OrderList","orderList","setOrderList","success","editData","setEditData","getOrder","updateDelivery","PrintInvoice","this","props","printData","border","invoiceID","colSpan","backgroundColor","client","map","index","marginTop","remark","discount","fontStyle","Component","Card","Meta","Menu","openPrint","setOpenPrint","componentRef","useRef","setPrintData","saleShow","setSaleShow","dashboardData","setDashboardData","openAddProduct","setOpenAddProduct","orderData","setOrderData","menuData","setMenuData","totalOrderPrice","setTotalOrderPrice","getProduct","getDashBoard","handleAddOrder","findIndex","ed","newOrder","product","slice","generateTotal","total","addOrder","totalSale","totalSaleToday","trigger","content","current","ref","margin","totalProduct","PlusCircleOutlined","taxPrice","warning","warn","disabled","splice","maxHeight","overflowY","App","Helmet","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4da6c3e8.chunk.js","sourcesContent":["export function currencyFormat(num) {\r\n    return '$' + num?.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n }","import React from 'react'\r\nimport {Space,Popconfirm,Button,Input,Form} from 'antd'\r\nimport {DeleteOutlined  } from '@ant-design/icons'\r\nimport { currencyFormat } from '../../../fn/fn';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function orderColumn({handleRemoveOrder,handlePlusQty,handleMinusQty,handleEditQty}) {\r\n    // let [form] = Form.useForm()\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Item',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Quantity',\r\n            dataIndex: 'qty',\r\n            key: 'qty',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                   \r\n                    {/* <ButtonGroup>\r\n                        <Button onClick={()=> handleMinusQty(record)} disabled={record.qty ===1}>\r\n                        -\r\n                        </Button>\r\n                        <div style={{padding:5,borderWidth:1}}> {record.qty} </div>\r\n                        <Button onClick={()=> handlePlusQty(record)}>\r\n                        +\r\n                        </Button>\r\n                    </ButtonGroup> */}\r\n\r\n                            <Input type=\"number\" min={0} onChange={(e)=> handleEditQty({...record,newValue:e.target.value})} value={record.qty} />\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            key: 'amount',\r\n            width: 150,\r\n            render: (text, record) => {\r\n            \r\n            return (\r\n                <Space size=\"middle\">\r\n                    {currencyFormat(record.qty * record.price)}\r\n                </Space>\r\n            )\r\n            }\r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link> */}\r\n                    <Popconfirm\r\n                        title=\"Do you want to remove this item?\"\r\n                        onConfirm={() => handleRemoveOrder(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></Button>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","export default __webpack_public_path__ + \"static/media/red-onion.ce03a861.jpg\";","export const rielAsOne = 4000","import React from 'react'\r\nimport {Col,Button,Image} from 'antd'\r\nimport { currencyFormat } from '../../fn/fn'\r\nimport { rielAsOne } from '../../context/headerContext'\r\nimport {TagOutlined  } from '@ant-design/icons'\r\n\r\nexport default function MenuItem({item, handleClick}) {\r\n    return (\r\n        <Col xs={24} md={6} style={{padding:10}}>\r\n            <Button style={{width:'100%',height:'100%'}} onClick={()=> handleClick(item)}>\r\n                <div style={{position:'relative'}}>\r\n                    {/* <Image src={item.image} preview={false} width={\"100px\"} /> */}\r\n                    <TagOutlined  style={{fontSize:100,color:'#CCCCCC'}} />\r\n                    <div className=\"price-tag\"><span style={{fontSize:14}}>{item.price * rielAsOne}&#6107;</span><br/>{currencyFormat(item.price)}</div>\r\n                </div>\r\n                                        \r\n                <span style={{textAlign:'center'}}>{item.name?.toUpperCase()}</span>\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message} from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function AddProduct({open,setOpen,setSuccess}) {\r\n    const axios = require('axios');\r\n    let [form] = Form.useForm()\r\n\r\n    const addProduct =async (e) =>{\r\n        try{\r\n            await axios.post('/api/product', e)\r\n            setSuccess(true)\r\n            setOpen(false)\r\n            form.resetFields()\r\n        }catch(error){\r\n            message.error(error.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        addProduct(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"CREATE NEW PRODUCT\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addProduct\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"category\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"category\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"VEGETABLE\">VEGETABLE</Option>\r\n                                <Option value=\"MEAT\">MEAT</Option>\r\n                              \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"inStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input type=\"number\" min={0} placeholder=\"in stock\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"price\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input type=\"number\" min={0} placeholder=\"price\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }} >\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"remark\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            CREATE\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Space,Popconfirm,Button} from 'antd'\r\nimport {DeleteOutlined  } from '@ant-design/icons'\r\nimport { currencyFormat } from '../../../fn/fn';\r\nimport { rielAsOne } from '../../../context/headerContext';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function salelistColumn() {\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Product',\r\n            dataIndex: '_id',\r\n            key: '_id',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Total QTY',\r\n            dataIndex: 'totalQty',\r\n            key: 'totalQty',\r\n            width: 100,\r\n            \r\n        },\r\n\r\n       \r\n        {\r\n            title: 'Total Sale',\r\n            dataIndex: 'totalSaleAmount',\r\n            key: 'totalSaleAmount',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    USD: {currencyFormat(record?.totalSaleAmount)}, KHRIEL: {record?.totalSaleAmount * rielAsOne} &#6107;\r\n                </span>\r\n            )\r\n            \r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            // render: (text, record) => (\r\n            //     <Space size=\"middle\">\r\n            //         {/* <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link> */}\r\n            //         <Popconfirm\r\n            //             title=\"Do you want to remove this item?\"\r\n            //             onConfirm={() => handleRemoveOrder(record._id)}\r\n            //             okText=\"Yes\"\r\n            //             cancelText=\"No\"\r\n            //             style={{cursor:'pointer'}}\r\n            //         >\r\n            //             <Button className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></Button>\r\n            //         </Popconfirm>\r\n\r\n            //     </Space>\r\n            // ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form} from 'antd'\r\nimport salelistColumn from './tableColumn/salelistColumn'\r\n\r\nexport default function SaleList() {\r\n    const axios = require('axios');\r\n\r\n    const [saleList,setSaleList] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [editData,setEditData] = useState({})\r\n\r\n    const getSaleList = async()=>{\r\n        try{\r\n            let {data} = await axios.get('api/dashboard/salelist')\r\n            console.log(data)\r\n            setSaleList(data)\r\n        }catch(error){\r\n            message.error(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getSaleList()\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Table \r\n                columns={salelistColumn()} \r\n                dataSource={saleList} \r\n                pagination={false}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Space,Popconfirm,Button} from 'antd'\r\nimport {DeleteOutlined, EditFilled ,CarFilled,PrinterFilled } from '@ant-design/icons'\r\nimport moment from 'moment'\r\nimport { currencyFormat } from '../../../fn/fn';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function orderlistColumn({handleEdit,handleDeliver,handlePrintInvoice}) {\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: '#Invoice',\r\n            dataIndex: 'invoiceID',\r\n            key: 'invoiceID',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'createdAt',\r\n            key: 'createdAt',\r\n            width: 150,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record.createdAt).format(\"DD-MMM-YYYY hh:mm:ss a\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Product',\r\n            dataIndex: 'product',\r\n            key: 'product',\r\n            width: 100,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {record?.orderItems?.length}\r\n                </Space>\r\n            ),\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Discount',\r\n            dataIndex: 'discount',\r\n            key: 'discount',\r\n            width: 150,\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Tax',\r\n            dataIndex: 'taxPrice',\r\n            key: 'taxPrice',\r\n            width: 150,\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Total Price',\r\n            dataIndex: 'totalPrice',\r\n            key: 'totalPrice',\r\n            width: 100,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {currencyFormat(record?.totalPrice)}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'Payment',\r\n            dataIndex: 'isPaid',\r\n            key: 'isPaid',\r\n            width: 100,\r\n            render: (text, record, i) => {\r\n\r\n                let badge = <span className=\"status-pending\">Pending</span>\r\n\r\n                if(record?.isDelivered===true){\r\n                    badge=<span className=\"status-delivered\">Delivered</span>\r\n                }\r\n\r\n                if(record?.isPaid===true){\r\n                    badge=<span className=\"status-paid\">Paid</span>\r\n                }\r\n\r\n                return (\r\n                <Space size=\"middle\" style={{width:'100%'}}>\r\n                    {badge}\r\n                </Space>\r\n            )},\r\n        },\r\n       \r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Link className=\"link\" to={\"/subCase/\" + record.id}><EditFilled /></Link> */}\r\n                    {/* <Popconfirm\r\n                        title=\"Do you want to remove this item?\"\r\n                        onConfirm={() => handleRemoveOrder(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></Button>\r\n                        \r\n                    </Popconfirm> */}\r\n                     <Popconfirm\r\n                        title=\"Are you sure to confirm delivery?\"\r\n                        onConfirm={() => handleDeliver(record)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{color:'#1d39c4'}} ><CarFilled  /></Button>\r\n                    </Popconfirm>\r\n                    <Button className=\"link\" style={{color:'#ad8b00'}} onClick={()=> handleEdit(record)}><EditFilled /></Button>\r\n                    <Button className=\"link\" onClick={()=> handlePrintInvoice(record)}><PrinterFilled /></Button>\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","import React from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message} from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function EditOrder({open,setOpen,setSuccess,data}) {\r\n    console.log(data)\r\n    const axios = require('axios');\r\n    let [form] = Form.useForm()\r\n\r\n    const editOrder =async (e) =>{\r\n        try{\r\n            await axios.put(`/api/order/${data?._id}/pay`,e)\r\n            setSuccess(true)\r\n            setOpen(false)\r\n            form.resetFields()\r\n        }catch(error){\r\n            console.log(error.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        editOrder(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"INVOICE\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"EditInvoice\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"paymentMethod\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"payment method\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"CASH\">CASH</Option>\r\n                                <Option value=\"ABA\">ABA</Option>\r\n                                {/* <Option value=\"ABA\">ABA</Option> */}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"inStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input type=\"number\" min={0} placeholder=\"in stock\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"price\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input type=\"number\" min={0} placeholder=\"price\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }} >\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"remark\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            PAY\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form} from 'antd'\r\nimport orderlistColumn from './tableColumn/orderlistColumn'\r\nimport { useState } from 'react/cjs/react.development';\r\nimport EditOrder from './modal/EditOrder';\r\n\r\n\r\nexport default function OrderList({handlePrintInvoice}) {\r\n    const axios = require('axios');\r\n\r\n    const [orderList,setOrderList] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [editData,setEditData] = useState({})\r\n\r\n    const getOrder = async()=>{\r\n        try{\r\n            let {data} = await axios.get('api/order')\r\n            if(data){\r\n                setOrderList(data)\r\n            }\r\n           \r\n        }catch(error){\r\n            message.error(error)\r\n        }\r\n    }\r\n\r\n    const updateDelivery = async(e)=>{\r\n        try{\r\n            let {data} = await axios.put(`api/order/${e}/deliver`)\r\n            // console.log(data)\r\n            // setOrderList(data)\r\n            console.log(data)\r\n            if(data.success===true){\r\n                setSuccess(true)\r\n                message.success(\"Order is delivered!\")\r\n            }else{\r\n                message.error(data.message)\r\n            }\r\n            \r\n        }catch(error){\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getOrder()\r\n        setSuccess(false)\r\n    },[success])\r\n\r\n    const handleEdit=(e)=>{\r\n        setEditData(e)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleDeliver=(e)=>{\r\n        updateDelivery(e._id)\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EditOrder open={open} setOpen={setOpen} setSuccess={setSuccess} data={editData} />\r\n            <Table \r\n                className=\"order-table\"\r\n                columns={orderlistColumn({handleEdit, handleDeliver,handlePrintInvoice})} \r\n                dataSource={orderList} \r\n                pagination={false}\r\n                // loading={}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { Col, Image, message, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport { rielAsOne } from \"../../context/headerContext\";\r\n\r\nexport default class PrintInvoice extends Component {\r\n  // getPersonalInfoById={this.props.getPersonalInfoById}\r\n  // getHospitalizationByPersonalInfo={this.props.getHospitalizationByPersonalInfo}\r\n  // getPersonalInfoByCaseWithPagination={this.props.getPersonalInfoByCaseWithPagination}\r\n  // getHistoryLocationByPersonalInfoId={getHistoryLocationByPersonalInfoId}\r\n\r\n  render() {\r\n\r\n    console.log(this.props.printData)\r\n\r\n    const printData =this.props.printData\r\n\r\n    // const sampleTest = this.props.getPersonalInfoById?.sampleTest;\r\n\r\n    // let lengthQuaranting = this.props.getPersonalInfoById?.quaranting.length\r\n    // const quarantingData = this.props.getPersonalInfoById?.quaranting[lengthQuaranting-1];\r\n\r\n    // console.log(quarantingData)\r\n\r\n    // let positiveTest = {};\r\n\r\n    // let index = sampleTest.findIndex((e) => e.result === true);\r\n    // positiveTest = { ...positiveTest, ...sampleTest[index] };\r\n\r\n    // let num= 0\r\n    // let num1= 0\r\n\r\n    // let family = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"គ្រួសារ\")\r\n    // let work = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"អ្នករួមការងារ\")\r\n    // let worker = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"ពលករ\")\r\n    // let quaranting = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"អ្នករួមចត្តាឡីស័ក\")\r\n\r\n    // // console.log(this.props.getPersonalInfoById)\r\n    // let lengthVaccination = this.props.getPersonalInfoById?.vaccination?.length\r\n    // let vaccination = this.props.getPersonalInfoById?.vaccination\r\n    return (\r\n        <div\r\n            style={{\r\n            padding: 20,\r\n           \r\n            }}\r\n            className=\"invoice-print\"\r\n        >\r\n            <table className=\"invoice-print\" style={{width:'100%'}}>\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td style={{textAlign:'center',fontSize:12}}>វិក្កយបត្រ</td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td style={{textAlign:'right'}}>កាលបរិច្ឆេទ</td>\r\n                    <td style={{textAlign:'center',border:'0.5px solid #CCCC'}}>{moment(printData?.createdAt).format(\"DD-MMM-YYYY\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>ភូមិថ្មី សង្កាត់ស្វាយដង្គំ ក្រុងសៀមរាប ខេត្តសៀមរាប</td>\r\n                    <td style={{textAlign:'right'}}>លេខវិក្កយបត្រ</td>\r\n                    <td style={{textAlign:'center',border:'0.5px solid #CCCC'}}>{printData?.invoiceID}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>លេខទូរស័ព្ទៈ 085 332 047</td>\r\n                    <td style={{textAlign:'right'}}>លេខកូដអតិថិជន</td>\r\n                    <td style={{textAlign:'center',border:'0.5px solid #CCCC'}}></td>\r\n                </tr>\r\n                <tr>\r\n                    {/* <td></td> */}\r\n                    <td colSpan=\"2\" style={{backgroundColor:'#AAAAAA',color:'#FFFFFF',fontSize:10}}>ព័ត៌មានអតិថិជន</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>ឈ្មោះ</td>\r\n                    <td>៖ {printData?.client}</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>ក្រុមហ៊ុន</td>\r\n                    <td>៖</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>អាសយដ្ឋាន</td>\r\n                    <td>៖</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>លេខទូរស័ព្ទៈ</td>\r\n                    <td>៖</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n            </table>\r\n            <table className=\"invoice-print description-order\" style={{width:'100%'}}>\r\n                <tr style={{backgroundColor:'#AAA',color:'#FFF'}}>\r\n                    <th style={{textAlign:'left',fontSize:10}}>ល.រ</th>\r\n                    <th style={{textAlign:'center',width:'50%',fontSize:10}}>បរិយាយ</th>\r\n                    <th style={{textAlign:'center',fontSize:10}}>ចំនួន</th>\r\n                    <th style={{textAlign:'center',fontSize:10}}>តម្លៃរាយ</th>\r\n                    <th style={{textAlign:'center',fontSize:10}}>តម្លៃសរុប</th>\r\n                </tr>\r\n\r\n                {   \r\n                   \r\n                    printData?.orderItems?.map((e,index)=>{\r\n                        \r\n                        return(\r\n                            <tr>\r\n                                <td>{index+1}</td>\r\n                                <td >{e?.name}</td>\r\n                                <td style={{textAlign:'center',width:'10%'}}>{e?.qty}</td>\r\n                                <td style={{textAlign:'center'}}>{e?.price  * rielAsOne} &#6107;</td>\r\n                                <td style={{textAlign:'right'}}>{ (e?.price* e?.qty) * rielAsOne } &#6107;</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                {/* <tr>\r\n                    <td ></td>\r\n                    <td style={{textAlign:'center',width:'10%'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                </tr>\r\n                <tr >\r\n                    <td style={{borderBottom:'none'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                </tr>\r\n                <tr>\r\n                    <td ></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                </tr> */}\r\n            </table>\r\n            <table className=\"invoice-print\" style={{width:'100%',marginTop:20}}>\r\n                <tr>\r\n                    <td style={{width:'50%'}}>ចំណាំ៖ {printData?.remark}</td>\r\n                    <td style={{textAlign:'center',width:'10%'}}></td>\r\n                    <td >សរុប</td>\r\n                    <td style={{textAlign:'right'}}>{printData?.totalPrice * rielAsOne} &#6107;</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td >បញ្ចុះតម្លៃ</td>\r\n                    <td style={{textAlign:'right'}}>{printData?.discount}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td >សរុបចុងក្រោយ</td>\r\n                    <td style={{textAlign:'right'}}>{printData?.totalPrice * rielAsOne} &#6107;</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td style={{backgroundColor:'#EEE'}}>លុយទទួលបាន</td>\r\n                    <td style={{textAlign:'right',backgroundColor:'#EEE'}}>0</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td >លុយអាប់</td>\r\n                    <td style={{textAlign:'right'}}>0</td>\r\n                </tr>\r\n                \r\n            </table>\r\n            <Row style={{marginTop:20,textAlign:'center'}}>\r\n                <Col xs={12}>\r\n                    អ្នកលក់\r\n                </Col>\r\n                <Col xs={12}>\r\n                    អ្នកដឹកជញ្ជូន\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row style={{marginTop:70,textAlign:'center',fontStyle:'italic'}}>\r\n                <Col xs={24}>\r\n                    សូមអរគុណដែលបានទិញទំនិញពីហ្គោគ្លូប៊លម៉ាត‌‌!!<br/>\r\n                    Thank you!! Please come again\r\n                </Col>\r\n                \r\n            </Row>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form, Modal} from 'antd'\r\nimport orderColumn from './tableColumn/orderColumn';\r\nimport RedOnion from '../../assets/red-onion.jpg'\r\nimport MenuItem from '../menuItem/MenuItem';\r\nimport { currencyFormat } from '../../fn/fn';\r\nimport {PlusCircleOutlined  } from '@ant-design/icons'\r\nimport AddProduct from '../product/modal/AddProduct';\r\nimport SaleList from '../salelist/SaleList';\r\nimport OrderList from '../order/OrderList';\r\nimport PrintInvoice from '../print/printInvoice';\r\nimport ReactToPrint from 'react-to-print';\r\nimport { rielAsOne } from '../../context/headerContext';\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function Menu() {\r\n    let [form] = Form.useForm()\r\n\r\n    const [openPrint, setOpenPrint] = useState(false)\r\n    const componentRef = useRef()\r\n\r\n    const [printData,setPrintData] = useState({})\r\n\r\n    const axios = require('axios');\r\n    const [success,setSuccess] = useState(false)\r\n\r\n    const [saleListShow,setSaleListShow] = useState(false)\r\n    const [saleShow,setSaleShow] = useState(\"\")\r\n    const [dashboardData,setDashboardData] = useState({})\r\n\r\n    const [openAddProduct,setOpenAddProduct] = useState(false)\r\n    const [orderData, setOrderData] = useState([])\r\n    const [menuData, setMenuData] = useState([])\r\n    const [totalOrderPrice, setTotalOrderPrice] = useState(0)\r\n\r\n    const getProduct = async()=>{\r\n        try{\r\n            let {data} = await axios.get('api/product')\r\n            console.log(data,\"not set\")\r\n            if(data){\r\n                console.log(data,\"set\")\r\n                setMenuData(data)\r\n            }\r\n            \r\n        }catch(error){\r\n            console.log(\"error : \"+ error)\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProduct()\r\n        setSuccess(false)\r\n\r\n    }, [success])\r\n\r\n    const getDashBoard = async()=>{\r\n        try{\r\n            let {data} = await axios.get('api/dashboard')\r\n            if(data){\r\n                setDashboardData(data)\r\n            }\r\n        }catch(error){\r\n            console.log(\"error dash : \"+ error)\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDashBoard()\r\n        setSuccess(false)\r\n    }, [success])\r\n\r\n    const handleAddOrder =(e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n\r\n        let newOrder = [...orderData,{_id:e._id,name:e.name,qty:1,price:e.price,product:e._id}]\r\n\r\n        if(index> -1){\r\n            let editOrder = {...orderData[index],qty:orderData[index].qty+1}\r\n            // orderData.splice(index, 1,editOrder)\r\n            // newOrder = [...orderData,editOrder] \r\n            newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        }\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n    const handleRemoveOrder = (e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e)\r\n        orderData.splice(index, 1)\r\n        setOrderData([...orderData])\r\n        setTotalOrderPrice(generateTotal(orderData))\r\n    }\r\n\r\n    const handlePlusQty =(e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n\r\n        let editOrder = {...orderData[index],qty:orderData[index].qty+1}\r\n        // orderData.splice(index, 1,editOrder)\r\n\r\n        let newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n    const handleEditQty =(e)=>{\r\n\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n        // let newValue = orderData[index].newValue\r\n        let editOrder = {...orderData[index],qty:e.newValue}\r\n        // orderData.splice(index, 1,editOrder)\r\n\r\n        let newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n\r\n    const handleMinusQty =(e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n\r\n        let editOrder = {...orderData[index],qty:orderData[index].qty-1}\r\n        // orderData.splice(index, 1)\r\n        let newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n    const handleCancelOrder =()=>{\r\n        form.resetFields()\r\n        setTotalOrderPrice(0)\r\n        setOrderData([])\r\n        message.warn(\"Order has cancelled!\")\r\n    }\r\n\r\n    const handlePrintInvoice =(e)=>{\r\n        setPrintData(e)\r\n        setOpenPrint(true)\r\n    }\r\n\r\n    const generateTotal =(data)=>{\r\n        let total = 0;\r\n        data?.map((e,index)=>{\r\n            total += e.price*e.qty\r\n        })\r\n        return total\r\n    }\r\n\r\n    const addOrder =async (e) =>{\r\n        try{\r\n            await axios.post('/api/order', e)\r\n            setSuccess(true)\r\n            form.resetFields()\r\n            setTotalOrderPrice(0)\r\n            setOrderData([])\r\n            message.success(\"Order has confirmed!\")\r\n        }catch(error){\r\n            message.error(error.message)    \r\n        }\r\n        \r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        let total = generateTotal(orderData)\r\n\r\n        \r\n\r\n        if(orderData.length > 0){\r\n            console.log({\r\n                ...values,\r\n                orderItems:orderData, \r\n                taxPrice:values.taxPrice > 0 ? values.taxPrice:0,\r\n                discount:values.discount > 0 ? values.discount :0,\r\n                totalPrice:total\r\n            })\r\n            addOrder(\r\n                {\r\n                    ...values,\r\n                    orderItems:orderData, \r\n                    taxPrice:values.taxPrice > 0 ? values.taxPrice:0,\r\n                    discount:values.discount > 0 ? values.discount :0,\r\n                    totalPrice:total\r\n                }\r\n            );\r\n        }else{\r\n            message.warning(\"No order!\")\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    let totalSale = 0\r\n    let totalSaleToday = 0\r\n    if(dashboardData?.totalSale?.length>0 ){\r\n        totalSale = dashboardData?.totalSale[dashboardData?.totalSale?.length-1]?.total\r\n        totalSaleToday = dashboardData?.totalSaleToday[dashboardData?.totalSaleToday?.length-1]?.total\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                width={800}\r\n                visible={openPrint}\r\n                footer={[\r\n                    // <Button\r\n                    //     key=\"1\"\r\n                    //     onClick={() => setOpenPrintInvoice(true)}\r\n                    // >\r\n                    //     បំពេញទិន្នន័យបន្ថែម\r\n                    // </Button>,\r\n                    <ReactToPrint\r\n                        key=\"2\"\r\n                        trigger={() => <button type=\"primary\" className=\"btn-grad\">PRINT INVOICE</button>}\r\n                        content={() => componentRef.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenPrint(false)}\r\n            >\r\n                <PrintInvoice \r\n                    ref={componentRef} \r\n                    printData={printData}\r\n                />\r\n            </Modal>\r\n            <AddProduct open={openAddProduct} setOpen={setOpenAddProduct} setSuccess={setSuccess} />\r\n            <Row style={{width:'80%', margin:'0 auto'}}>\r\n                <Col xs={24} md={8} style={{padding:10}}>\r\n                    <Card\r\n                        className=\"card-menu\"\r\n                        style={{height:'100%'}}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <h3>TOTAL PRODUCT</h3>\r\n                                <div style={{fontSize:38}}>{dashboardData?.totalProduct >0  ? dashboardData?.totalProduct:0}</div>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n\r\n                                { saleShow !== \"salelist\"  ?\r\n                                    <button\r\n                                    className=\"btn-grad\"\r\n                                    onClick={()=> setSaleShow(\"salelist\")}\r\n                                    style={{width:'100%',backgroundColor:'#ff8b8c',color:\"#FFFFFF\"}}\r\n                                    >\r\n                                        Sale List\r\n                                    </button>\r\n                                :null} \r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} md={8} style={{padding:10}}>\r\n                    <Card\r\n                         className=\"card-menu\"\r\n                    >\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <h3>TOTAL SALE</h3>\r\n                                <div style={{fontSize:38}}>{currencyFormat(totalSale)}</div>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                { saleShow!== \"orderlist\" ?\r\n                                <button\r\n                                className=\"btn-grad\"\r\n                                onClick={()=> setSaleShow(\"orderlist\")}\r\n                                style={{width:'100%',backgroundColor:'#ff8b8c',color:\"#FFFFFF\"}}\r\n                                >\r\n                                    Order List\r\n                                </button>\r\n                                :null}\r\n                                <br/><br/>\r\n                                <h3>Today: {currencyFormat(totalSaleToday)}</h3>\r\n\r\n                                {/* { saleShow === false ?\r\n                                <Button\r\n                                // className=\"card-menu\"\r\n                                onClick={()=> setSaleShow(true)}\r\n                                style={{width:'100%',backgroundColor:'#ff8b8c',color:\"#FFFFFF\"}}\r\n                                >\r\n                                    Sale List\r\n                                </Button>\r\n                                :null} */}\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} md={8} style={{padding:10}}>\r\n                    <Button\r\n                     className=\"card-menu\"\r\n                     onClick={()=> setSaleShow(\"\")}\r\n                     style={{width:'100%',height:'100%',backgroundColor:'#ff8b8c'}}\r\n                    >\r\n                        <h3>NEW ORDER</h3>\r\n                        <div style={{fontSize:38}}><PlusCircleOutlined /></div>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <br/><br/>\r\n            { saleShow ===\"\" ? \r\n            <Row >\r\n                <Col xs={24} md={12} style={{backgroundColor:'#F7F9FC',padding:10}}>\r\n                <Form\r\n                    form={form}\r\n                    name=\"addUser\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Row>\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"invoiceID\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"#INVOICE\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"client\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"customer\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={12} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"shippingAddress\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"address\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={3} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"taxPrice\"\r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"tax %\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        {/* <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"shippingPrice\"\r\n                                // rules={[{ required: true, message: 'Field is required!' }]} \r\n                            >\r\n                                <Input type=\"number\" placeholder=\"shipping $\" />\r\n                            </Form.Item>\r\n                        </Col> */}\r\n                        <Col xs={3} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"discount\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"dis %\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={5} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"deliveredBy\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"deliver by\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={5} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"remark\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"remark\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    style={{width:'100%'}}\r\n                                    // onClick={()=> setOpenAddProduct(true)}\r\n                                    htmlType=\"submit\"\r\n                                    className=\"btn-grad\"\r\n                                >\r\n                                    CONFIRM\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    // style={{backgroundColor:'#ff8b8c' ,color:'#FFFFFF'}}\r\n                                    onClick={()=> handleCancelOrder()}\r\n                                    style={{width:'100%'}}\r\n                                    type=\"danger\"\r\n                                    disabled={orderData?.length<=0}\r\n                                >\r\n                                    CANCEL\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Form>\r\n\r\n                    <Table \r\n                        columns={orderColumn({handleRemoveOrder, handlePlusQty,handleMinusQty,handleEditQty})} \r\n                        dataSource={orderData} \r\n                        pagination={false}\r\n                    />\r\n                    <h2 style={{textAlign:'right'}}>Total Price: {totalOrderPrice.toFixed(2)}</h2>\r\n                    <h2 style={{textAlign:'right'}}>Riel: {totalOrderPrice * rielAsOne }&#6107;</h2>\r\n                </Col>\r\n\r\n                <Col xs={24} md={12} style={{backgroundColor:'#F7F9FC'}}>\r\n                    <Row>\r\n                        <Col xs={18} style={{padding:10}}>\r\n                            <Input placeholder=\"Search for...\" />\r\n                        </Col>\r\n                        <Col xs={6} style={{padding:10}}>\r\n                            <button\r\n                                // style={{backgroundColor:'#ff8b8c' ,color:'#FFFFFF'}}\r\n                                className=\"btn-grad\"\r\n                                onClick={()=> setOpenAddProduct(true)}\r\n                            >\r\n                                NEW PRODUCT\r\n                            </button>\r\n                        </Col>\r\n                        <Row style={{maxHeight:500,overflowY:'scroll',width:'100%'}} >\r\n                        { \r\n                        \r\n                            menuData?.map((e,index)=>{\r\n                                return (\r\n                                    <MenuItem item={e} handleClick={handleAddOrder} />\r\n                                )   \r\n                            })\r\n                        }\r\n                      \r\n                        </Row>\r\n                        \r\n                    </Row>\r\n                    \r\n                    {/* <Card\r\n                        hoverable\r\n                        style={{ width: 100,height:100 }}\r\n                        // cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n            : null }\r\n\r\n            {\r\n            saleShow===\"orderlist\" ?\r\n            <Row>\r\n                <Col xs={24} style={{padding:10}}>\r\n                    <OrderList handlePrintInvoice={handlePrintInvoice} />\r\n                </Col>\r\n            </Row>\r\n            :null}\r\n\r\n            {\r\n            saleShow===\"salelist\" ?\r\n            <Row>\r\n                <Col xs={24} style={{padding:10}}>\r\n                    <SaleList handlePrintInvoice={handlePrintInvoice} />\r\n                </Col>\r\n            </Row>\r\n            :null}\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport {Button} from 'antd'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  // Link\n} from \"react-router-dom\";\nimport Menu from './component/menu/Menu';\nimport { Helmet } from 'react-helmet';\n\nfunction App() {\n  return (\n    \n    <>\n      <Helmet>\n          <title>MINI POS</title>\n      </Helmet>\n      {/* <h1>Test</h1> */}\n      <Router>\n          <Switch>\n              <Route path=\"/\">\n                <Menu />\n              </Route>\n          </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  // <h1>Testindex</h1>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}